version: 2
jobs:
  build:
#    branches:
#      only:
#      - dev
    working_directory: ~/code
    docker:
    - image: circleci/android:api-28
    environment:
      JVM_OPTS: -Xmx3200m
      TERM: dumb
    steps:
    - checkout
    - restore_cache:
        keys:
        - jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
        - v1-dependencies-{{ checksum "build.gradle" }}
        - v1-dependencies-
    #      - run:
    #         name: Chmod permissions #if permission for Gradlew Dependencies fail, use this.
    #         command: sudo chmod +x ./gradlew
    - run:
        name: Download Dependencies
        command: ./gradlew androidDependencies
    - save_cache:
        paths:
        - ~/.gradle
        key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
    #    - run:
    #        name: Run Tests
    #        command: ./gradlew lint test
    #    - store_artifacts: # for display in Artifacts: https://circleci.com/docs/2.0/artifacts/
    #        path: app/build/reports
    #        destination: reports
    #    - store_test_results: # for display in Test Summary: https://circleci.com/docs/2.0/collect-test-data/
    #        path: app/build/test-results
    # See https://circleci.com/docs/2.0/deployment-integrations/ for deploy examples

  test:
    #    branches:
    #      only:
    #      - dev
    docker:
    - image: circleci/android:api-28-alpha
    steps:
    - run:
        name: Build debug APK
        command: |
          ./gradlew :app:assembleDebug
    - run:
        name: Store Google Service Account
        command: echo $GCLOUD_SERVICE_KEY > ${HOME}/gcloud-service-key.json
    - run:
        name: Authorize gcloud and set config defaults
        command: |
          sudo gcloud auth activate-service-account --key-file=${HOME}/gcloud-service-key.json
          sudo gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
    - run:
        name: Test with Firebase Test Lab
        command: >
          sudo gcloud firebase test android run \
              --type robo \
              --app ./build/outputs/apk/debug/app-debug.apk \
              --device model=Nexus9,version=25 \
              --results-bucket cloud-test-${GOOGLE_PROJECT_ID} \
    - run:
        name: Install gsutil dependency and copy test results data
        command: |
          sudo pip install -U crcmod
          sudo gsutil -m cp -r -U `sudo gsutil ls gs://[BUCKET_NAME]/[OBJECT_NAME] | tail -1` ${CIRCLE_ARTIFACTS}/ | true

workflows:
  version: 2
  build_and_test:
    jobs:
    - build
    - test