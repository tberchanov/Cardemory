version: 2
jobs:
  build:
    working_directory: ~/code
    docker:
      - image: circleci/android:api-28
    environment:
      JVM_OPTS: -Xmx3200m
      TERM: dumb
    steps:
      - checkout
      - restore_cache:
          keys:
            - jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
            - v1-dependencies-{{ checksum "build.gradle" }}
            - v1-dependencies-
      #      - run:
      #         name: Chmod permissions #if permission for Gradlew Dependencies fail, use this.
      #         command: sudo chmod +x ./gradlew
      - run:
          name: Load  google-services
          command: |
            echo $GOOGLE_SERVICES | base64 --decode > app/google-services.json
      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run:
          name: Run Lint Tests
          command: ./gradlew lint test
      - store_artifacts:
          path: app/build/reports
          destination: reports
      - store_test_results:
          path: memorykit/build/test-results
      - run:
          name: Build debug
          command: ./gradlew assembleDebug
      - store_artifacts:
          path: app/build/outputs/apk/debug
          destination: debug-build
    # See https://circleci.com/docs/2.0/deployment-integrations/ for deploy examples

  test:
    docker:
      - image: circleci/android:api-28-alpha
    environment:
      JVM_OPTS: -Xmx3200m
      TERM: dumb
    steps:
      - checkout
      - restore_cache:
          keys:
            - jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
            - v1-dependencies-{{ checksum "build.gradle" }}
            - v1-dependencies-
      - run:
          name: Load  google-services
          command: |
            echo $GOOGLE_SERVICES | base64 --decode > app/google-services.json
      - run:
          name: Run Memory Kit Unit Tests
          command: ./gradlew memorykit:test
      - store_artifacts:
          path: memorykit/build/reports
          destination: reports
      - store_test_results:
          path: memorykit/build/test-results
      - run:
          name: Build debug APK
          command: |
            ./gradlew :app:assembleDebug
      - run:
          name: Store Google Service Account
          command: echo $GCLOUD_SERVICE_KEY > ${HOME}/gcloud-service-key.json
      - run:
          name: Authorize gcloud and set config defaults
          command: |
            sudo gcloud auth activate-service-account --key-file=${HOME}/gcloud-service-key.json
            sudo gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
      - run:
          name: Test with Firebase Test Lab
          command: >
            sudo gcloud beta firebase test android run \
                --type robo \
                --app ./app/build/outputs/apk/debug/app-debug.apk \
                --device model=Nexus9,version=25 \

workflows:
  version: 2
  build_and_test:
    jobs:
      - build:
          filters:
            branches:
              only:
                - dev
#      - test:
#          requires:
#            - build
